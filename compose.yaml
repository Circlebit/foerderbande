name: fomo

# Include Supabase Stack
include:
  - supabase/docker-compose.yml

services:
  # Frontend Service
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      target: ${DOCKER_TARGET:-development} # Use env var or default to development
    container_name: fomo-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_INTERNAL_PORT:-3000}"
    volumes:
      # Development: mount source for hot reload (only in dev mode)
      - ./packages/frontend/src:/app/src:ro
      - ./packages/frontend/public:/app/public:ro
      - ./packages/frontend/index.html:/app/index.html:ro
      - ./packages/frontend/vite.config.ts:/app/vite.config.ts:ro
      - ./packages/frontend/tsconfig.json:/app/tsconfig.json:ro
    environment:
      # Pass through Vite environment variables
      - VITE_SUPABASE_URL=${SUPABASE_PUBLIC_URL}
      - VITE_SUPABASE_ANON_KEY=${ANON_KEY}
      - VITE_USE_MOCK_DATA=${VITE_USE_MOCK_DATA:-false}
    depends_on:
      - kong # Wait for Supabase API Gateway
    profiles:
      - frontend
      - full
    restart: unless-stopped

  # Production Frontend (nginx-only, no volumes)
  frontend-prod:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_SUPABASE_URL=${SUPABASE_PUBLIC_URL}
        - VITE_SUPABASE_ANON_KEY=${ANON_KEY}
        - VITE_USE_MOCK_DATA=${VITE_USE_MOCK_DATA:-false}
    container_name: fomo-frontend-prod
    ports:
      - "${FRONTEND_PROD_PORT:-3002}:80"
    depends_on:
      - kong
    profiles:
      - production
      - prod-test
    restart: unless-stopped

  # Future: Backend Service
  # backend:
  #   build:
  #     context: ./packages/backend
  #     dockerfile: Dockerfile
  #   container_name: fomo-backend
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
  #     - SUPABASE_URL=${SUPABASE_PUBLIC_URL}
  #     - SUPABASE_SERVICE_KEY=${SERVICE_ROLE_KEY}
  #   depends_on:
  #     - db
  #   profiles:
  #     - backend
  #     - full
  #   restart: unless-stopped
